apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
        applicationId "net.skyestudios.mtgcardquery"
        minSdkVersion 16
        targetSdkVersion 25
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        Alpha {
            minSdkVersion 16
            applicationId 'net.skyestudios.mtgcardquery'
            targetSdkVersion 25
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
            versionName 'Alpha'
            versionNameSuffix '-build:' + getBuildVersion()
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:design:25.3.0'
    compile 'com.android.support:support-v4:25.3.0'
    compile 'com.android.support:appcompat-v7:25.3.0'
    testCompile 'junit:junit:4.12'
}

def getBuildVersion() {
    def versionPropsFile = file("buildnumber.properties")
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)

        code
    } else {
        throw new GradleException("Could not read buildnumber.properties")
    }
}
